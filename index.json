[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/cookies.js",
    "content": "import {Injectable} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {CookieOptions, COOKIE_OPTIONS} from './cookie_options';\r\n\r\n/**\r\n * Provides access to the HTTP cookies.\r\n * See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies\r\n */\r\nexport class Cookies {\r\n\r\n  /**\r\n   * The class decorators.\r\n   * @type {Array}\r\n   */\r\n  static get annotations() {\r\n    return [new Injectable];\r\n  }\r\n\r\n  /**\r\n   * The constructor parameters.\r\n   * @type {Array}\r\n   */\r\n  static get parameters() {\r\n    return [COOKIE_OPTIONS, DOCUMENT];\r\n  }\r\n\r\n  /**\r\n   * Initializes a new instance of the class.\r\n   * @param {CookieOptions} cookieOptions The default cookie options.\r\n   * @param {HTMLDocument} document The underlying HTML document.\r\n   */\r\n  constructor(cookieOptions, document) {\r\n\r\n    /**\r\n     * The default cookie options.\r\n     * @type {CookieOptions}\r\n     */\r\n    this._defaults = cookieOptions;\r\n\r\n    /**\r\n     * The underlying HTML document.\r\n     * @type {HTMLDocument}\r\n     */\r\n    this._document = document;\r\n\r\n    /**\r\n     * The handler of \"changes\" events.\r\n     * @type {Subject<KeyValueChangeRecord>}\r\n     */\r\n    this._onChanges = new Subject;\r\n  }\r\n\r\n  /**\r\n   * The default cookie options.\r\n   * @type {CookieOptions}\r\n   */\r\n  get defaults() {\r\n    return this._defaults;\r\n  }\r\n\r\n  /**\r\n   * The keys of the cookies associated with the current document.\r\n   * @type {string[]}\r\n   */\r\n  get keys() {\r\n    let keys = this._document.cookie.replace(/((?:^|\\s*;)[^=]+)(?=;|$)|^\\s*|\\s*(?:=[^;]*)?(?:\\1|$)/g, '');\r\n    return keys.length ? keys.split(/\\s*(?:=[^;]*)?;\\s*/).map(key => decodeURIComponent(key)) : [];\r\n  }\r\n\r\n  /**\r\n   * The number of cookies associated with the current document.\r\n   * @type {number}\r\n   */\r\n  get length() {\r\n    return this.keys.length;\r\n  }\r\n\r\n  /**\r\n   * The stream of \"changes\" events.\r\n   * @type {Observable<KeyValueChangeRecord[]>}\r\n   */\r\n  get onChanges() {\r\n    return this._onChanges.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Returns a new iterator that allows iterating the cookies associated with the current document.\r\n   */\r\n  *[Symbol.iterator]() {\r\n    for (let key of this.keys) yield [key, this.get(key)];\r\n  }\r\n\r\n  /**\r\n   * Removes all cookies associated with the current document.\r\n   */\r\n  clear() {\r\n    let changes = this.keys.map(key => ({currentValue: null, key, previousValue: this.get(key)}));\r\n    for (let key of this.keys) this._removeItem(key);\r\n    this._onChanges.next(changes);\r\n  }\r\n\r\n  /**\r\n   * Gets the value associated to the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @param {*} defaultValue The default cookie value if it does not exist.\r\n   * @return {string} The cookie value, or the default value if the item is not found.\r\n   */\r\n  get(key, defaultValue = null) {\r\n    if (!this.has(key)) return defaultValue;\r\n\r\n    try {\r\n      let token = encodeURIComponent(key).replace(/[-.+*]/g, '\\\\$&');\r\n      let scanner = new RegExp(`(?:(?:^|.*;)\\\\s*${token}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`);\r\n      return decodeURIComponent(this._document.cookie.replace(scanner, '$1'));\r\n    }\r\n\r\n    catch (err) {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the deserialized value associated to the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @param {*} defaultValue The default cookie value if it does not exist.\r\n   * @return {*} The deserialized cookie value, or the default value if the item is not found.\r\n   */\r\n  getObject(key, defaultValue = null) {\r\n    try {\r\n      let value = this.get(key);\r\n      return typeof value == 'string' ? JSON.parse(value) : defaultValue;\r\n    }\r\n\r\n    catch (err) {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a value indicating whether the current document has a cookie with the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @return {boolean} `true` if the current document has a cookie with the specified key, otherwise `false`.\r\n   */\r\n  has(key) {\r\n    let token = encodeURIComponent(key).replace(/[-.+*]/g, '\\\\$&');\r\n    return new RegExp(`(?:^|;\\\\s*)${token}\\\\s*\\\\=`).test(this._document.cookie);\r\n  }\r\n\r\n  /**\r\n   * Removes the value associated to the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @param {CookieOptions} [options] The cookie options.\r\n   */\r\n  remove(key, options = this.defaults) {\r\n    let previousValue = this.get(key);\r\n    this._removeItem(key, options);\r\n    this._onChanges.next([{currentValue: null, key, previousValue}]);\r\n  }\r\n\r\n  /**\r\n   * Associates a given value to the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @param {string} value The cookie value.\r\n   * @param {CookieOptions|Date} [options] The cookie options, or the expiration date and time for the cookie.\r\n   * @throws {TypeError} The specified key is invalid.\r\n   */\r\n  set(key, value, options = this.defaults) {\r\n    if (!key.length || /^(domain|expires|max-age|path|secure)$/i.test(key)) throw new TypeError('Invalid cookie name.');\r\n\r\n    let cookieValue = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\r\n    if (options instanceof Date) options = new CookieOptions(options, this.defaults.path, this.defaults.domain, this.defaults.secure);\r\n    if (options.toString().length) cookieValue += `; ${options}`;\r\n\r\n    let previousValue = this.get(key);\r\n    this._document.cookie = cookieValue;\r\n    this._onChanges.next([{currentValue: value, key, previousValue}]);\r\n  }\r\n\r\n  /**\r\n   * Serializes and associates a given value to the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @param {*} value The cookie value.\r\n   * @param {CookieOptions|Date} [options] The cookie options, or the expiration date and time for the cookie.\r\n   */\r\n  setObject(key, value, options = this.defaults) {\r\n    this.set(key, JSON.stringify(value), options);\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of this object.\r\n   * @return {string} The string representation of this object.\r\n   */\r\n  toString() {\r\n    return this._document.cookie;\r\n  }\r\n\r\n  /**\r\n   * Removes the value associated to the specified key.\r\n   * @param {string} key The cookie name.\r\n   * @param {CookieOptions} [options] The cookie options.\r\n   */\r\n  _removeItem(key, options = this.defaults) {\r\n    if (!this.has(key)) return;\r\n\r\n    let {domain, path} = options;\r\n    let cookieOptions = new CookieOptions(0, path, domain);\r\n    this._document.cookie = `${encodeURIComponent(key)}=; ${cookieOptions}`;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/repo/ngx-cookies/src/cookies.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Cookies",
    "memberof": "src/cookies.js",
    "static": true,
    "longname": "src/cookies.js~Cookies",
    "access": "public",
    "export": true,
    "importPath": "@cedx/ngx-cookies/src/cookies.js",
    "importStyle": "{Cookies}",
    "description": "Provides access to the HTTP cookies.\nSee: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "get",
    "name": "annotations",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cookies.js~Cookies.annotations",
    "access": "public",
    "description": "The class decorators.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cookies.js~Cookies.parameters",
    "access": "public",
    "description": "The constructor parameters.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#constructor",
    "access": "public",
    "description": "Initializes a new instance of the class.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "CookieOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "cookieOptions",
        "description": "The default cookie options."
      },
      {
        "nullable": null,
        "types": [
          "HTMLDocument"
        ],
        "spread": false,
        "optional": false,
        "name": "document",
        "description": "The underlying HTML document."
      }
    ]
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/cookies.js~Cookies",
    "static": false,
    "longname": "src/cookies.js~Cookies#_defaults",
    "access": "private",
    "description": "The default cookie options.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "CookieOptions"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "_document",
    "memberof": "src/cookies.js~Cookies",
    "static": false,
    "longname": "src/cookies.js~Cookies#_document",
    "access": "private",
    "description": "The underlying HTML document.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "HTMLDocument"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "_onChanges",
    "memberof": "src/cookies.js~Cookies",
    "static": false,
    "longname": "src/cookies.js~Cookies#_onChanges",
    "access": "private",
    "description": "The handler of \"changes\" events.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "Subject<KeyValueChangeRecord>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#defaults",
    "access": "public",
    "description": "The default cookie options.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "CookieOptions"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "get",
    "name": "keys",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#keys",
    "access": "public",
    "description": "The keys of the cookies associated with the current document.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "get",
    "name": "length",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#length",
    "access": "public",
    "description": "The number of cookies associated with the current document.",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "onChanges",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#onChanges",
    "access": "public",
    "description": "The stream of \"changes\" events.",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Observable<KeyValueChangeRecord[]>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/cookies.js~Cookies",
    "generator": true,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#[Symbol.iterator]",
    "access": "public",
    "description": "Returns a new iterator that allows iterating the cookies associated with the current document.",
    "lineNumber": 90,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "clear",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#clear",
    "access": "public",
    "description": "Removes all cookies associated with the current document.",
    "lineNumber": 97,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "get",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#get",
    "access": "public",
    "description": "Gets the value associated to the specified key.",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "The default cookie value if it does not exist."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The cookie value, or the default value if the item is not found."
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#getObject",
    "access": "public",
    "description": "Gets the deserialized value associated to the specified key.",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "The default cookie value if it does not exist."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The deserialized cookie value, or the default value if the item is not found."
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "has",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#has",
    "access": "public",
    "description": "Gets a value indicating whether the current document has a cookie with the specified key.",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if the current document has a cookie with the specified key, otherwise `false`."
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "remove",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#remove",
    "access": "public",
    "description": "Removes the value associated to the specified key.",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "CookieOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The cookie options."
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "set",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#set",
    "access": "public",
    "description": "Associates a given value to the specified key.",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The cookie value."
      },
      {
        "nullable": null,
        "types": [
          "CookieOptions",
          "Date"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The cookie options, or the expiration date and time for the cookie."
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "The specified key is invalid."
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "setObject",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#setObject",
    "access": "public",
    "description": "Serializes and associates a given value to the specified key.",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The cookie value."
      },
      {
        "nullable": null,
        "types": [
          "CookieOptions",
          "Date"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The cookie options, or the expiration date and time for the cookie."
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#toString",
    "access": "public",
    "description": "Returns a string representation of this object.",
    "lineNumber": 194,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The string representation of this object."
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "_removeItem",
    "memberof": "src/cookies.js~Cookies",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookies.js~Cookies#_removeItem",
    "access": "private",
    "description": "Removes the value associated to the specified key.",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The cookie name."
      },
      {
        "nullable": null,
        "types": [
          "CookieOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The cookie options."
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/cookie_module.js",
    "content": "import {NgModule} from '@angular/core';\r\nimport {CookieOptions} from './cookie_options';\r\nimport {Cookies} from './cookies';\r\n\r\n/**\r\n * The cookie module.\r\n */\r\nexport class CookieModule {\r\n\r\n  /**\r\n   * The class decorators.\r\n   * @type {Array}\r\n   */\r\n  static get annotations() {\r\n    return [new NgModule({\r\n      providers: [\r\n        CookieOptions.provider,\r\n        Cookies\r\n      ]\r\n    })];\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/repo/ngx-cookies/src/cookie_module.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "class",
    "name": "CookieModule",
    "memberof": "src/cookie_module.js",
    "static": true,
    "longname": "src/cookie_module.js~CookieModule",
    "access": "public",
    "export": true,
    "importPath": "@cedx/ngx-cookies/src/cookie_module.js",
    "importStyle": "{CookieModule}",
    "description": "The cookie module.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 72,
    "kind": "get",
    "name": "annotations",
    "memberof": "src/cookie_module.js~CookieModule",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cookie_module.js~CookieModule.annotations",
    "access": "public",
    "description": "The class decorators.",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/cookie_options.js",
    "content": "import {APP_BASE_HREF} from '@angular/common';\r\nimport {InjectionToken, Injector} from '@angular/core';\r\n\r\n/**\r\n * An injection token representing the default cookie options.\r\n * @type {InjectionToken}\r\n */\r\nexport const COOKIE_OPTIONS = new InjectionToken('COOKIE_OPTIONS');\r\n\r\n/**\r\n * Defines the attributes of a HTTP cookie.\r\n */\r\nexport class CookieOptions {\r\n\r\n  /**\r\n   * The service provider.\r\n   * @type {object}\r\n   */\r\n  static get provider() {\r\n    return {\r\n      provide: COOKIE_OPTIONS,\r\n      useFactory: injector => new CookieOptions(null, injector.get(APP_BASE_HREF, '/')),\r\n      deps: [Injector]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initializes a new instance of the class.\r\n   * @param {Date|number|string} [expires] The expiration date and time for the cookie.\r\n   * @param {string} [path] The path to which the cookie applies.\r\n   * @param {string} [domain] The domain for which the cookie is valid.\r\n   * @param {boolean} [secure] Value indicating whether to transmit the cookie over HTTPS only.\r\n   */\r\n  constructor(expires = null, path = '', domain = '', secure = false) {\r\n\r\n    /**\r\n     * The domain for which the cookie is valid.\r\n     * @type {string}\r\n     */\r\n    this.domain = domain;\r\n\r\n    /**\r\n     * The expiration date and time for the cookie.\r\n     * @type {Date}\r\n     */\r\n    this.expires = expires instanceof Date ? expires : null;\r\n    if (Number.isInteger(expires) || typeof expires == 'string') this.expires = new Date(expires);\r\n\r\n    /**\r\n     * The path to which the cookie applies.\r\n     * @type {string}\r\n     */\r\n    this.path = path;\r\n\r\n    /**\r\n     * Value indicating whether to transmit the cookie over HTTPS only.\r\n     * @type {boolean}\r\n     */\r\n    this.secure = secure;\r\n  }\r\n\r\n  /**\r\n   * Converts this object to a map in JSON format.\r\n   * @return {object} The map in JSON format corresponding to this object.\r\n   */\r\n  toJSON() {\r\n    return {\r\n      domain: this.domain,\r\n      expires: this.expires ? this.expires.toISOString() : null,\r\n      path: this.path,\r\n      secure: this.secure\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of this object.\r\n   * @return {string} The string representation of this object.\r\n   */\r\n  toString() {\r\n    let value = [];\r\n    if (this.expires) value.push(`expires=${this.expires.toUTCString()}`);\r\n    if (this.domain.length) value.push(`domain=${this.domain}`);\r\n    if (this.path.length) value.push(`path=${this.path}`);\r\n    if (this.secure) value.push('secure');\r\n    return value.join('; ');\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/repo/ngx-cookies/src/cookie_options.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "COOKIE_OPTIONS",
    "memberof": "src/cookie_options.js",
    "static": true,
    "longname": "src/cookie_options.js~COOKIE_OPTIONS",
    "access": "public",
    "export": true,
    "importPath": "@cedx/ngx-cookies/src/cookie_options.js",
    "importStyle": "{COOKIE_OPTIONS}",
    "description": "An injection token representing the default cookie options.",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "InjectionToken"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "class",
    "name": "CookieOptions",
    "memberof": "src/cookie_options.js",
    "static": true,
    "longname": "src/cookie_options.js~CookieOptions",
    "access": "public",
    "export": true,
    "importPath": "@cedx/ngx-cookies/src/cookie_options.js",
    "importStyle": "{CookieOptions}",
    "description": "Defines the attributes of a HTTP cookie.",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 76,
    "kind": "get",
    "name": "provider",
    "memberof": "src/cookie_options.js~CookieOptions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cookie_options.js~CookieOptions.provider",
    "access": "public",
    "description": "The service provider.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cookie_options.js~CookieOptions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#constructor",
    "access": "public",
    "description": "Initializes a new instance of the class.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Date",
          "number",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "expires",
        "description": "The expiration date and time for the cookie."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "path",
        "description": "The path to which the cookie applies."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "domain",
        "description": "The domain for which the cookie is valid."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "secure",
        "description": "Value indicating whether to transmit the cookie over HTTPS only."
      }
    ]
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "domain",
    "memberof": "src/cookie_options.js~CookieOptions",
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#domain",
    "access": "public",
    "description": "The domain for which the cookie is valid.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "expires",
    "memberof": "src/cookie_options.js~CookieOptions",
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#expires",
    "access": "public",
    "description": "The expiration date and time for the cookie.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "path",
    "memberof": "src/cookie_options.js~CookieOptions",
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#path",
    "access": "public",
    "description": "The path to which the cookie applies.",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "secure",
    "memberof": "src/cookie_options.js~CookieOptions",
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#secure",
    "access": "public",
    "description": "Value indicating whether to transmit the cookie over HTTPS only.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/cookie_options.js~CookieOptions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#toJSON",
    "access": "public",
    "description": "Converts this object to a map in JSON format.",
    "lineNumber": 66,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "The map in JSON format corresponding to this object."
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cookie_options.js~CookieOptions",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cookie_options.js~CookieOptions#toString",
    "access": "public",
    "description": "Returns a string representation of this object.",
    "lineNumber": 79,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The string representation of this object."
    },
    "params": []
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/index.js",
    "content": "export * from './cookie_module';\r\nexport * from './cookie_options';\r\nexport * from './cookies';\r\n",
    "static": true,
    "longname": "C:/repo/ngx-cookies/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# Cookie service for Angular\r\n![Runtime](https://img.shields.io/badge/angular-%3E%3D4.3.2-brightgreen.svg) ![Release](https://img.shields.io/npm/v/@cedx/ngx-cookies.svg) ![License](https://img.shields.io/npm/l/@cedx/ngx-cookies.svg) ![Downloads](https://img.shields.io/npm/dt/@cedx/ngx-cookies.svg) ![Dependencies](https://david-dm.org/cedx/ngx-cookies.svg) ![Coverage](https://coveralls.io/repos/github/cedx/ngx-cookies/badge.svg) ![Build](https://travis-ci.org/cedx/ngx-cookies.svg)\r\n\r\n[Angular](https://angular.io) service for interacting with the [HTTP Cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies), implemented in [JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript).\r\n\r\n## Installing via [npm](https://www.npmjs.com)\r\nFrom a command prompt, run:\r\n\r\n```shell\r\n$ npm install --save @cedx/ngx-cookies\r\n```\r\n\r\n## Usage\r\nThis package provides a service dedicated to the cookie management: the `Cookies` class.\r\nIt needs to be registered with the dependency injector by importing its module, the `CookieModule` class:\r\n\r\n```javascript\r\nimport {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {CookieModule} from '@cedx/ngx-cookies';\r\nimport {AppComponent} from './app_component';\r\n\r\n// The root module.\r\nexport class AppModule {\r\n  \r\n  // The class decorators.\r\n  static get annotations() {\r\n    return [new NgModule({\r\n      bootstrap: [AppComponent],\r\n      declarations: [AppComponent],\r\n      imports: [BrowserModule, CookieModule]\r\n    })];\r\n  }\r\n}\r\n```\r\n\r\n> The `CookieModule` provider is intended for the application root module.\r\n\r\nThen, it will be available in the constructor of the component classes:\r\n\r\n```javascript\r\nimport {Component} from '@angular/core';\r\nimport {Cookies} from '@cedx/ngx-cookies';\r\n\r\n// The main component.\r\nexport class AppComponent {\r\n  \r\n  // The class decorators.\r\n  static get annotations() {\r\n    return [new Component({\r\n      selector: 'my-application',\r\n      template: '<h1>Hello World!</h1>'\r\n    })];\r\n  }\r\n\r\n  // The constructor parameters.\r\n  static get parameters() {\r\n    return [Cookies];\r\n  }\r\n\r\n  // Initializes a new instance of the class.\r\n  constructor(cookies) {\r\n    cookies.get('foo');\r\n    cookies.getObject('bar');\r\n\r\n    cookies.set('foo', 'bar');\r\n    cookies.setObject('foo', {bar: 'baz'});\r\n  }\r\n}\r\n```\r\n\r\n### Programming interface\r\nThe `Cookies` class has the following API:\r\n\r\n#### `.defaults: CookieOptions`\r\nReturns the default options to pass when setting cookies:\r\n\r\n```javascript\r\nconsole.log(cookies.defaults);\r\n// CookieOptions {\"domain\": \"\", \"expires\": null, \"path\": \"/\", \"secure\": false}\r\n\r\ncookies.defaults.domain = 'domain.com';\r\ncookies.defaults.path = '/www';\r\ncookies.defaults.secure = true;\r\n\r\nconsole.log(cookies.defaults);\r\n// CookieOptions {\"domain\": \"domain.com\", \"expires\": null, \"path\": \"/www\", \"secure\": true}\r\n```\r\n\r\nThis property allows the configuration of the default cookie options at runtime.\r\n\r\n#### `.keys: string[]`\r\nReturns the keys of the cookies associated with the current document:\r\n\r\n```javascript\r\nconsole.log(cookies.keys); // []\r\n\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.keys); // [\"foo\"]\r\n```\r\n\r\n#### `.length: number`\r\nReturns the number of cookies associated with the current document:\r\n\r\n```javascript\r\nconsole.log(cookies.length); // 0\r\n\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.length); // 1\r\n```\r\n\r\n#### `.clear()`\r\nRemoves all cookies associated with the current document:\r\n\r\n```javascript\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.length); // 1\r\n\r\ncookies.clear();\r\nconsole.log(cookies.length); // 0\r\n```\r\n\r\n#### `.get(key: string, defaultValue: any = null): string`\r\nReturns the value associated to the specified key:\r\n\r\n```javascript\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.get('foo')); // \"bar\"\r\n```\r\n\r\nReturns the `defaultValue` parameter if the key is not found:\r\n\r\n```javascript\r\nconsole.log(cookies.get('unknownKey')); // null\r\nconsole.log(cookies.get('unknownKey', 'foo')); // \"foo\"\r\n```\r\n\r\n#### `.getObject(key: string, defaultValue: any = null): any`\r\nDeserializes and returns the value associated to the specified key:\r\n\r\n```javascript\r\ncookies.setObject('foo', {bar: 'baz'});\r\nconsole.log(cookies.getObject('foo')); // {bar: \"baz\"}\r\n```\r\n\r\n> The value is deserialized using the [`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) method.\r\n\r\nReturns the `defaultValue` parameter if the key is not found:\r\n\r\n```javascript\r\nconsole.log(cookies.getObject('unknownKey')); // null\r\nconsole.log(cookies.getObject('unknownKey', false)); // false\r\n```\r\n\r\n#### `.has(key: string): boolean`\r\nReturns a boolean value indicating whether the current document has a cookie with the specified key:\r\n\r\n```javascript\r\nconsole.log(cookies.has('foo')); // false\r\n\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.has('foo')); // true\r\n```\r\n\r\n#### `.remove(key: string, options: CookieOptions = this.defaults)`\r\nRemoves the value associated to the specified key:\r\n\r\n```javascript\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.has('foo')); // true\r\n\r\ncookies.remove('foo');\r\nconsole.log(cookies.has('foo')); // false\r\n```\r\n\r\n#### `.set(key: string, value: string, options: CookieOptions|Date = this.defaults)`\r\nAssociates a given value to the specified key:\r\n\r\n```javascript\r\nconsole.log(cookies.get('foo')); // null\r\n\r\ncookies.set('foo', 'bar');\r\nconsole.log(cookies.get('foo')); // \"bar\"\r\n```\r\n\r\nAn expiration date and time can be provided for setting the cookie duration:\r\n\r\n```javascript\r\ncookies.set('foo', 'bar', new Date(Date.now() + 3600 * 1000));\r\n```\r\n\r\n#### `.setObject(key: string, value: any, options: CookieOptions|Date = this.defaults)`\r\nSerializes and associates a given value to the specified key:\r\n\r\n```javascript\r\nconsole.log(cookies.getObject('foo')); // null\r\n\r\ncookies.setObject('foo', {bar: 'baz'});\r\nconsole.log(cookies.getObject('foo')); // {bar: \"baz\"}\r\n```\r\n\r\n> The value is serialized using the [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) method.\r\n\r\nAn expiration date and time can be provided for setting the cookie duration:\r\n\r\n```javascript\r\ncookies.setObject('foo', {bar: 'baz'}, new Date(Date.now() + 3600 * 1000));\r\n```\r\n\r\n### Options\r\nSeveral methods accept an `options` parameter in order to customize the cookie attributes.\r\nThese options are expressed using an instance of the `CookieOptions` class, which has the following properties:\r\n\r\n- `expires: Date = null`: The expiration date and time for the cookie.\r\n- `path: string = \"\"`: The path to which the cookie applies.\r\n- `domain: string = \"\"`: The domain for which the cookie is valid.\r\n- `secure: boolean = false`: Value indicating whether to transmit the cookie over HTTPS only.\r\n\r\nFor example:\r\n\r\n```javascript\r\nlet duration = 3600 * 1000; // One hour.\r\nlet options = new CookieOptions(Date.now() + duration, '/', 'www.domain.com');\r\ncookies.set('foo', 'bar', options);\r\n```\r\n\r\nYou can provide default values for the cookie options using the `COOKIE_OPTIONS` injection token.\r\n\r\n```javascript\r\nimport {APP_BASE_HREF} from '@angular/common';\r\nimport {Injector} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {CookieModule, CookieOptions, COOKIE_OPTIONS} from '@cedx/ngx-cookies';\r\nimport {AppComponent} from './app_component';\r\n\r\n// The root module.\r\nexport class AppModule {\r\n  \r\n  // The class decorators.\r\n  static get annotations() {\r\n    return [new NgModule({\r\n      bootstrap: [AppComponent],\r\n      declarations: [AppComponent],\r\n      imports: [BrowserModule, CookieModule],\r\n      providers: [{\r\n        provide: COOKIE_OPTIONS,\r\n        deps: [Injector],\r\n        useFactory: injector =>\r\n          new CookieOptions(null, injector.get(APP_BASE_HREF, '/'), 'www.domain.com', true)\r\n      }]\r\n    })];\r\n  }\r\n}\r\n```\r\n\r\n> By default, the address that appears in your `<base>` tag will be used as the cookie path. This is important so that cookies will be visible for all routes when [`PathLocationStrategy`](https://angular.io/api/common/PathLocationStrategy) is used to configure the [`Location`](https://angular.io/api/common/Location) service.\r\n\r\n### Iteration\r\nThe `Cookies` class is iterable: you can go through all key/value pairs contained using a `for...of` loop. Each entry is an array with two elements (e.g. the key and the value):\r\n\r\n```javascript\r\ncookies.set('foo', 'bar');\r\ncookies.set('anotherKey', 'anotherValue');\r\n\r\nfor (let entry of cookies) {\r\n  console.log(entry);\r\n  // Round 1: [\"foo\", \"bar\"]\r\n  // Round 2: [\"anotherKey\", \"anotherValue\"] \r\n}\r\n```\r\n\r\n### Events\r\nEvery time one or several values are changed (added, removed or updated) through the `Cookies` class, a `changes` event is triggered.\r\n\r\nThis event is exposed as an [Observable](http://reactivex.io/intro.html), you can subscribe to it using the `onChanges` property:\r\n\r\n```javascript\r\ncookies.onChanges.subscribe(\r\n  changes => console.log(changes)\r\n);\r\n```\r\n\r\nThe changes are expressed as an array of [`KeyValueChangeRecord`](https://angular.io/api/core/KeyValueChangeRecord) instances, where a `null` reference indicates an absence of value:\r\n\r\n```javascript\r\ncookies.onChanges.subscribe(changes => console.log(changes[0]));\r\n\r\ncookies.set('foo', 'bar');\r\n// Prints: {key: \"foo\", currentValue: \"bar\", previousValue: null}\r\n\r\ncookies.set('foo', 'baz');\r\n// Prints: {key: \"foo\", currentValue: \"baz\", previousValue: \"bar\"}\r\n\r\ncookies.remove('foo');\r\n// Prints: {key: \"foo\", currentValue: null, previousValue: \"baz\"}\r\n```\r\n\r\nThe values contained in the `currentValue` and `previousValue` properties of the `KeyValueChangeRecord` instances are the raw cookie values. If you use the `Cookies#setObject` method to set a cookie, you will get the serialized string value, not the original value passed to the method:\r\n\r\n```javascript\r\ncookies.setObject('foo', {bar: 'baz'});\r\n// Prints: {key: \"foo\", currentValue: \"{\\\"bar\\\": \\\"baz\\\"}\", previousValue: null}\r\n```\r\n\r\n## See also\r\n- [API reference](https://cedx.github.io/ngx-cookies)\r\n- [Code coverage](https://coveralls.io/github/cedx/ngx-cookies)\r\n- [Continuous integration](https://travis-ci.org/cedx/ngx-cookies)\r\n\r\n## License\r\n[Cookie service for Angular](https://github.com/cedx/ngx-cookies) is distributed under the Apache License, version 2.0.\r\n",
    "longname": "C:\\repo\\ngx-cookies\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"author\": \"Cédric Belin <cedric@belin.io>\",\r\n  \"bugs\": \"https://github.com/cedx/ngx-cookies/issues\",\r\n  \"description\": \"Cookie service for Angular.\",\r\n  \"homepage\": \"https://github.com/cedx/ngx-cookies\",\r\n  \"license\": \"Apache-2.0\",\r\n  \"main\": \"./lib/index\",\r\n  \"module\": \"./src/index\",\r\n  \"name\": \"@cedx/ngx-cookies\",\r\n  \"repository\": \"cedx/ngx-cookies\",\r\n  \"version\": \"1.1.0\",\r\n  \"dependencies\": {\r\n    \"@angular/common\": \"^4.3.2\",\r\n    \"@angular/core\": \"^4.3.2\",\r\n    \"rxjs\": \"^5.4.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@cedx/coveralls\": \"^2.2.0\",\r\n    \"@cedx/gulp-david\": \"^8.1.0\",\r\n    \"babel-polyfill\": \"^6.23.0\",\r\n    \"babel-preset-env\": \"^1.6.0\",\r\n    \"babel-register\": \"^6.24.1\",\r\n    \"chai\": \"^4.1.0\",\r\n    \"del\": \"^3.0.0\",\r\n    \"ec.cookie-mock\": \"^1.0.1\",\r\n    \"esdoc\": \"^1.0.1\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"estraverse\": \"^4.2.0\",\r\n    \"gulp\": \"^3.9.1\",\r\n    \"gulp-babel\": \"^6.1.2\",\r\n    \"gulp-eslint\": \"^4.0.0\",\r\n    \"mocha\": \"^3.5.0\",\r\n    \"nsp\": \"^2.7.0\",\r\n    \"nyc\": \"^11.1.0\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=8.0.0\"\r\n  },\r\n  \"keywords\": [\r\n    \"angular\",\r\n    \"cookie\",\r\n    \"ngx\",\r\n    \"observable\",\r\n    \"rxjs\",\r\n    \"service\"\r\n  ],\r\n  \"scripts\": {\r\n    \"coverage\": \"coveralls var/lcov.info\",\r\n    \"prepare\": \"gulp build\",\r\n    \"test\": \"nyc --report-dir=var --reporter=lcovonly mocha --compilers=js:babel-register --recursive --require=babel-polyfill\"\r\n  }\r\n}\r\n",
    "longname": "C:\\repo\\ngx-cookies\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\repo\\ngx-cookies\\CHANGELOG.md",
    "name": "CHANGELOG.md",
    "content": "# Changelog\r\nThis file contains highlights of what changes on each version of the [Cookie service for Angular](https://github.com/cedx/ngx-cookies) project.\r\n\r\n## Version 1.1.0\r\n- Updated the package dependencies.\r\n\r\n## Version 1.0.0\r\n- Added the `CookieOptions.provider` static property.\r\n- First stable release.\r\n- Updated the package dependencies.\r\n\r\n## Version 0.2.0\r\n- Updated the package dependencies.\r\n\r\n## Version 0.1.1\r\n- Fixed a dependency injection error.\r\n\r\n## Version 0.1.0\r\n- Initial release.\r\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 86,
    "kind": "testFile",
    "name": "test/cookies_test.js",
    "content": "'use strict';\r\n\r\nimport {expect} from 'chai';\r\nimport CookieMock from 'ec.cookie-mock';\r\nimport {CookieOptions, Cookies} from '../src/index';\r\n\r\n/**\r\n * @test {Cookies}\r\n */\r\ndescribe('Cookies', () => {\r\n\r\n  /**\r\n   * @test {Cookies#keys}\r\n   */\r\n  describe('#keys', () => {\r\n    it('should return an empty array if the current document has no associated cookie', () => {\r\n      expect(new Cookies(new CookieOptions, new CookieMock).keys).to.be.an('array').that.is.empty;\r\n    });\r\n\r\n    it('should return the keys of the cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n      backend.cookie = 'bar=baz';\r\n\r\n      let keys = new Cookies(new CookieOptions, backend).keys;\r\n      expect(keys).to.be.an('array').and.have.lengthOf(2);\r\n      expect(keys[0]).to.equal('foo');\r\n      expect(keys[1]).to.equal('bar');\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#length}\r\n   */\r\n  describe('#length', () => {\r\n    it('should return zero if the current document has no associated cookie', () => {\r\n      expect(new Cookies(new CookieOptions, new CookieMock)).to.have.lengthOf(0);\r\n    });\r\n\r\n    it('should return the number of cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n      backend.cookie = 'bar=baz';\r\n      expect(new Cookies(new CookieOptions, backend)).to.have.lengthOf(2);\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#onChanges}\r\n   */\r\n  describe('#onChanges', () => {\r\n    let subscription;\r\n    afterEach('cancel the subscription', () =>\r\n      subscription.unsubscribe()\r\n    );\r\n\r\n    it('should trigger an event when a cookie is added', done => {\r\n      let cookies = new Cookies(new CookieOptions, new CookieMock);\r\n      subscription = cookies.onChanges.subscribe(changes => {\r\n        expect(changes).to.be.an('array').and.have.lengthOf(1);\r\n\r\n        let record = changes[0];\r\n        expect(record).to.be.an('object');\r\n        expect(record).to.have.property('key').that.equal('foo');\r\n        expect(record).to.have.property('currentValue').that.equal('bar');\r\n        expect(record).to.have.property('previousValue').that.is.null;\r\n\r\n        done();\r\n      });\r\n\r\n      cookies.set('foo', 'bar');\r\n    });\r\n\r\n    it('should trigger an event when a cookie is updated', done => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      subscription = cookies.onChanges.subscribe(changes => {\r\n        expect(changes).to.be.an('array').and.have.lengthOf(1);\r\n\r\n        let record = changes[0];\r\n        expect(record).to.be.an('object');\r\n        expect(record).to.have.property('key').that.equal('foo');\r\n        expect(record).to.have.property('currentValue').that.equal('baz');\r\n        expect(record).to.have.property('previousValue').that.equal('bar');\r\n\r\n        done();\r\n      });\r\n\r\n      cookies.set('foo', 'baz');\r\n    });\r\n\r\n    it('should trigger an event when a cookie is removed', done => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      subscription = cookies.onChanges.subscribe(changes => {\r\n        expect(changes).to.be.an('array').and.have.lengthOf(1);\r\n\r\n        let record = changes[0];\r\n        expect(record).to.be.an('object');\r\n        expect(record).to.have.property('key').that.equal('foo');\r\n        expect(record).to.have.property('currentValue').that.is.null;\r\n        expect(record).to.have.property('previousValue').that.equal('bar');\r\n\r\n        done();\r\n      });\r\n\r\n      cookies.remove('foo');\r\n    });\r\n\r\n    it('should trigger an event when all the cookies are removed', done => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n      backend.cookie = 'bar=baz';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      subscription = cookies.onChanges.subscribe(changes => {\r\n        expect(changes).to.be.an('array').and.have.lengthOf(2);\r\n\r\n        let record = changes[0];\r\n        expect(record).to.be.an('object');\r\n        expect(record).to.have.property('key').that.equal('foo');\r\n        expect(record).to.have.property('currentValue').that.is.null;\r\n        expect(record).to.have.property('previousValue').that.equal('bar');\r\n\r\n        record = changes[1];\r\n        expect(record).to.be.an('object');\r\n        expect(record).to.have.property('key').that.equal('bar');\r\n        expect(record).to.have.property('currentValue').that.is.null;\r\n        expect(record).to.have.property('previousValue').that.equal('baz');\r\n\r\n        done();\r\n      });\r\n\r\n      cookies.clear();\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#Symbol.iterator}\r\n   */\r\n  describe('#[Symbol.iterator]()', () => {\r\n    it('should return a done iterator if the current document has no associated cookie', () => {\r\n      let cookies = new Cookies(new CookieOptions, new CookieMock);\r\n      let iterator = cookies[Symbol.iterator]();\r\n      expect(iterator.next().done).to.be.true;\r\n    });\r\n\r\n    it('should return a value iterator if the current document has associated cookies', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n      backend.cookie = 'bar=baz';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      let iterator = cookies[Symbol.iterator]();\r\n\r\n      let next = iterator.next();\r\n      expect(next.done).to.be.false;\r\n      expect(next.value).to.be.an('array');\r\n      expect(next.value[0]).to.equal('foo');\r\n      expect(next.value[1]).to.equal('bar');\r\n\r\n      next = iterator.next();\r\n      expect(next.done).to.be.false;\r\n      expect(next.value[0]).to.equal('bar');\r\n      expect(next.value[1]).to.equal('baz');\r\n      expect(iterator.next().done).to.be.true;\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#clear}\r\n   */\r\n  describe('#clear()', () => {\r\n    it('should remove all the cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n      backend.cookie = 'bar=baz';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      cookies.clear();\r\n      expect(backend.cookie).to.not.contain('foo');\r\n      expect(backend.cookie).to.not.contain('bar');\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#get}\r\n   */\r\n  describe('#get()', () => {\r\n    it('should properly get the cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n\r\n      expect(cookies.get('foo')).to.be.null;\r\n      expect(cookies.get('foo', '123')).to.equal('123');\r\n\r\n      backend.cookie = 'foo=bar';\r\n      expect(cookies.get('foo')).to.equal('bar');\r\n\r\n      backend.cookie = 'foo=123';\r\n      expect(cookies.get('foo')).to.equal('123');\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#getObject}\r\n   */\r\n  describe('#getObject()', () => {\r\n    it('should properly get the deserialized cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n\r\n      expect(cookies.getObject('foo')).to.be.null;\r\n      expect(cookies.getObject('foo', {key: 'value'})).to.deep.equal({key: 'value'});\r\n\r\n      backend.cookie = 'foo=123';\r\n      expect(cookies.getObject('foo')).to.equal(123);\r\n\r\n      backend.cookie = 'foo=%22bar%22';\r\n      expect(cookies.getObject('foo')).to.equal('bar');\r\n\r\n      backend.cookie = 'foo=%7B%22key%22%3A%22value%22%7D';\r\n      expect(cookies.getObject('foo')).to.be.an('object')\r\n        .and.have.property('key').that.equal('value');\r\n    });\r\n\r\n    it('should return the default value if the value can\\'t be deserialized', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      expect(cookies.getObject('foo', 'defaultValue')).to.equal('defaultValue');\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#has}\r\n   */\r\n  describe('#has()', () => {\r\n    it('should return `false` if the current document has an associated cookie with the specified key', () => {\r\n      expect(new Cookies(new CookieOptions, new CookieMock).has('foo')).to.be.false;\r\n    });\r\n\r\n    it('should return `true` if the current document does not have an associated cookie with the specified key', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      expect(cookies.has('foo')).to.be.true;\r\n      expect(cookies.has('bar')).to.be.false;\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#remove}\r\n   */\r\n  describe('#remove()', () => {\r\n    it('should properly remove the cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      backend.cookie = 'foo=bar';\r\n      backend.cookie = 'bar=baz';\r\n\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      cookies.remove('foo');\r\n      expect(backend.cookie).to.not.contain('foo');\r\n      expect(backend.cookie).to.contain('bar=baz');\r\n\r\n      cookies.remove('bar');\r\n      expect(backend.cookie).to.not.contain('bar');\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#set}\r\n   */\r\n  describe('#set()', () => {\r\n    it('should properly set the cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      expect(backend.cookie).to.not.contain('foo');\r\n\r\n      cookies.set('foo', 'bar');\r\n      expect(backend.cookie).to.contain('foo=bar');\r\n\r\n      cookies.set('foo', '123');\r\n      expect(backend.cookie).to.contain('foo=123');\r\n    });\r\n\r\n    it('should throw an error if the specified key is a reserved word', () => {\r\n      let cookies = new Cookies(new CookieOptions, new CookieMock);\r\n      expect(() => cookies.set('domain', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.set('expires', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.set('max-age', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.set('path', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.set('secure', 'foo')).to.throw(TypeError);\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#setObject}\r\n   */\r\n  describe('#setObject()', () => {\r\n    it('should properly serialize and set the cookies associated with the current document', () => {\r\n      let backend = new CookieMock;\r\n      let cookies = new Cookies(new CookieOptions, backend);\r\n      expect(backend.cookie).to.not.contain('foo');\r\n\r\n      cookies.setObject('foo', 123);\r\n      expect(backend.cookie).to.contain('foo=123');\r\n\r\n      cookies.setObject('foo', 'bar');\r\n      expect(backend.cookie).to.contain('foo=%22bar%22');\r\n\r\n      cookies.setObject('foo', {key: 'value'});\r\n      expect(backend.cookie).to.contain('foo=%7B%22key%22%3A%22value%22%7D');\r\n    });\r\n\r\n    it('should throw an error if the specified key is a reserved word', () => {\r\n      let cookies = new Cookies(new CookieOptions, new CookieMock);\r\n      expect(() => cookies.setObject('domain', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.setObject('expires', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.setObject('max-age', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.setObject('path', 'foo')).to.throw(TypeError);\r\n      expect(() => cookies.setObject('secure', 'foo')).to.throw(TypeError);\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {Cookies#toString}\r\n   */\r\n  describe('#toString()', () => {\r\n    it('should return an empty string for a newly created instance', () => {\r\n      expect(String(new Cookies(new CookieOptions, new CookieMock))).to.be.empty;\r\n    });\r\n\r\n    it('should return a format like \"<key>=<value>; expires=<expires>; domain=<domain>; path=<path>; secure\" for an initialized instance', () => {\r\n      let cookies = new Cookies(new CookieOptions(null, '/path', 'domain.com', true), new CookieMock);\r\n      cookies.set('foo', 'bar');\r\n      expect(String(cookies)).to.equal('foo=bar; domain=domain.com; path=/path; secure');\r\n\r\n      cookies.set('bar', 'baz', new Date(Date.now() + 3600000));\r\n      expect(String(cookies)).to.contain('bar=baz; expires=').and.contain('domain=domain.com; path=/path; secure');\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "C:/repo/ngx-cookies/test/cookies_test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/cookies_test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cookies_test.js~describe0",
    "access": null,
    "description": "Cookies",
    "lineNumber": 10,
    "testTargets": [
      "Cookies"
    ]
  },
  {
    "__docId__": 88,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe1",
    "access": null,
    "description": "#keys",
    "lineNumber": 15,
    "testTargets": [
      "Cookies#keys"
    ]
  },
  {
    "__docId__": 89,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/cookies_test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe1.it2",
    "access": null,
    "description": "should return an empty array if the current document has no associated cookie",
    "lineNumber": 16
  },
  {
    "__docId__": 90,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/cookies_test.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe1.it3",
    "access": null,
    "description": "should return the keys of the cookies associated with the current document",
    "lineNumber": 20
  },
  {
    "__docId__": 91,
    "kind": "test",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe4",
    "access": null,
    "description": "#length",
    "lineNumber": 35,
    "testTargets": [
      "Cookies#length"
    ]
  },
  {
    "__docId__": 92,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/cookies_test.js~describe0.describe4",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe4.it5",
    "access": null,
    "description": "should return zero if the current document has no associated cookie",
    "lineNumber": 36
  },
  {
    "__docId__": 93,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/cookies_test.js~describe0.describe4",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe4.it6",
    "access": null,
    "description": "should return the number of cookies associated with the current document",
    "lineNumber": 40
  },
  {
    "__docId__": 94,
    "kind": "test",
    "name": "describe7",
    "testId": 7,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe7",
    "access": null,
    "description": "#onChanges",
    "lineNumber": 51,
    "testTargets": [
      "Cookies#onChanges"
    ]
  },
  {
    "__docId__": 95,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "test/cookies_test.js~describe0.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe7.it8",
    "access": null,
    "description": "should trigger an event when a cookie is added",
    "lineNumber": 57
  },
  {
    "__docId__": 96,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/cookies_test.js~describe0.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe7.it9",
    "access": null,
    "description": "should trigger an event when a cookie is updated",
    "lineNumber": 74
  },
  {
    "__docId__": 97,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "test/cookies_test.js~describe0.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe7.it10",
    "access": null,
    "description": "should trigger an event when a cookie is removed",
    "lineNumber": 94
  },
  {
    "__docId__": 98,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/cookies_test.js~describe0.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe7.it11",
    "access": null,
    "description": "should trigger an event when all the cookies are removed",
    "lineNumber": 114
  },
  {
    "__docId__": 99,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe12",
    "access": null,
    "description": "#[Symbol.iterator]()",
    "lineNumber": 145,
    "testTargets": [
      "Cookies#Symbol.iterator"
    ]
  },
  {
    "__docId__": 100,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/cookies_test.js~describe0.describe12",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe12.it13",
    "access": null,
    "description": "should return a done iterator if the current document has no associated cookie",
    "lineNumber": 146
  },
  {
    "__docId__": 101,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/cookies_test.js~describe0.describe12",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe12.it14",
    "access": null,
    "description": "should return a value iterator if the current document has associated cookies",
    "lineNumber": 152
  },
  {
    "__docId__": 102,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe15",
    "access": null,
    "description": "#clear()",
    "lineNumber": 177,
    "testTargets": [
      "Cookies#clear"
    ]
  },
  {
    "__docId__": 103,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/cookies_test.js~describe0.describe15",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe15.it16",
    "access": null,
    "description": "should remove all the cookies associated with the current document",
    "lineNumber": 178
  },
  {
    "__docId__": 104,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe17",
    "access": null,
    "description": "#get()",
    "lineNumber": 193,
    "testTargets": [
      "Cookies#get"
    ]
  },
  {
    "__docId__": 105,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/cookies_test.js~describe0.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe17.it18",
    "access": null,
    "description": "should properly get the cookies associated with the current document",
    "lineNumber": 194
  },
  {
    "__docId__": 106,
    "kind": "test",
    "name": "describe19",
    "testId": 19,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe19",
    "access": null,
    "description": "#getObject()",
    "lineNumber": 212,
    "testTargets": [
      "Cookies#getObject"
    ]
  },
  {
    "__docId__": 107,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/cookies_test.js~describe0.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe19.it20",
    "access": null,
    "description": "should properly get the deserialized cookies associated with the current document",
    "lineNumber": 213
  },
  {
    "__docId__": 108,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "test/cookies_test.js~describe0.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe19.it21",
    "access": null,
    "description": "should return the default value if the value can't be deserialized",
    "lineNumber": 231
  },
  {
    "__docId__": 109,
    "kind": "test",
    "name": "describe22",
    "testId": 22,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe22",
    "access": null,
    "description": "#has()",
    "lineNumber": 243,
    "testTargets": [
      "Cookies#has"
    ]
  },
  {
    "__docId__": 110,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/cookies_test.js~describe0.describe22",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe22.it23",
    "access": null,
    "description": "should return `false` if the current document has an associated cookie with the specified key",
    "lineNumber": 244
  },
  {
    "__docId__": 111,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/cookies_test.js~describe0.describe22",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe22.it24",
    "access": null,
    "description": "should return `true` if the current document does not have an associated cookie with the specified key",
    "lineNumber": 248
  },
  {
    "__docId__": 112,
    "kind": "test",
    "name": "describe25",
    "testId": 25,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe25",
    "access": null,
    "description": "#remove()",
    "lineNumber": 261,
    "testTargets": [
      "Cookies#remove"
    ]
  },
  {
    "__docId__": 113,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/cookies_test.js~describe0.describe25",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe25.it26",
    "access": null,
    "description": "should properly remove the cookies associated with the current document",
    "lineNumber": 262
  },
  {
    "__docId__": 114,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe27",
    "access": null,
    "description": "#set()",
    "lineNumber": 280,
    "testTargets": [
      "Cookies#set"
    ]
  },
  {
    "__docId__": 115,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "test/cookies_test.js~describe0.describe27",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe27.it28",
    "access": null,
    "description": "should properly set the cookies associated with the current document",
    "lineNumber": 281
  },
  {
    "__docId__": 116,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/cookies_test.js~describe0.describe27",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe27.it29",
    "access": null,
    "description": "should throw an error if the specified key is a reserved word",
    "lineNumber": 293
  },
  {
    "__docId__": 117,
    "kind": "test",
    "name": "describe30",
    "testId": 30,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe30",
    "access": null,
    "description": "#setObject()",
    "lineNumber": 306,
    "testTargets": [
      "Cookies#setObject"
    ]
  },
  {
    "__docId__": 118,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/cookies_test.js~describe0.describe30",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe30.it31",
    "access": null,
    "description": "should properly serialize and set the cookies associated with the current document",
    "lineNumber": 307
  },
  {
    "__docId__": 119,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/cookies_test.js~describe0.describe30",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe30.it32",
    "access": null,
    "description": "should throw an error if the specified key is a reserved word",
    "lineNumber": 322
  },
  {
    "__docId__": 120,
    "kind": "test",
    "name": "describe33",
    "testId": 33,
    "memberof": "test/cookies_test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe33",
    "access": null,
    "description": "#toString()",
    "lineNumber": 335,
    "testTargets": [
      "Cookies#toString"
    ]
  },
  {
    "__docId__": 121,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/cookies_test.js~describe0.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe33.it34",
    "access": null,
    "description": "should return an empty string for a newly created instance",
    "lineNumber": 336
  },
  {
    "__docId__": 122,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "test/cookies_test.js~describe0.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookies_test.js~describe0.describe33.it35",
    "access": null,
    "description": "should return a format like \"<key>=<value>; expires=<expires>; domain=<domain>; path=<path>; secure\" for an initialized instance",
    "lineNumber": 340
  },
  {
    "__docId__": 123,
    "kind": "testFile",
    "name": "test/cookie_options_test.js",
    "content": "'use strict';\r\n\r\nimport {expect} from 'chai';\r\nimport {CookieOptions} from '../src/index';\r\n\r\n/**\r\n * @test {CookieOptions}\r\n */\r\ndescribe('CookieOptions', () => {\r\n\r\n  /**\r\n   * @test {CookieOptions#toJSON}\r\n   */\r\n  describe('#toJSON()', () => {\r\n    it('should return a map with default values for a newly created instance', () => {\r\n      expect((new CookieOptions).toJSON()).to.be.an('object').that.deep.equal({\r\n        expires: null,\r\n        path: '',\r\n        domain: '',\r\n        secure: false\r\n      });\r\n    });\r\n\r\n    it('should return a non-empty map for an initialized instance', () => {\r\n      expect(new CookieOptions(0, '/path', 'domain.com', true).toJSON()).to.be.an('object').that.deep.equal({\r\n        expires: '1970-01-01T00:00:00.000Z',\r\n        path: '/path',\r\n        domain: 'domain.com',\r\n        secure: true\r\n      });\r\n    });\r\n  });\r\n\r\n  /**\r\n   * @test {CookieOptions#toString}\r\n   */\r\n  describe('#toString()', () => {\r\n    it('should return an empty string for a newly created instance', () => {\r\n      expect(String(new CookieOptions)).to.be.empty;\r\n    });\r\n\r\n    it('should return a format like \"expires=<expires>; domain=<domain>; path=<path>; secure\" for an initialized instance', () => {\r\n      expect(String(new CookieOptions(0, '/path', 'domain.com', true)))\r\n        .to.equal('expires=Thu, 01 Jan 1970 00:00:00 GMT; domain=domain.com; path=/path; secure');\r\n    });\r\n  });\r\n});\r\n",
    "static": true,
    "longname": "C:/repo/ngx-cookies/test/cookie_options_test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "test",
    "name": "describe36",
    "testId": 36,
    "memberof": "test/cookie_options_test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36",
    "access": null,
    "description": "CookieOptions",
    "lineNumber": 9,
    "testTargets": [
      "CookieOptions"
    ]
  },
  {
    "__docId__": 125,
    "kind": "test",
    "name": "describe37",
    "testId": 37,
    "memberof": "test/cookie_options_test.js~describe36",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36.describe37",
    "access": null,
    "description": "#toJSON()",
    "lineNumber": 14,
    "testTargets": [
      "CookieOptions#toJSON"
    ]
  },
  {
    "__docId__": 126,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/cookie_options_test.js~describe36.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36.describe37.it38",
    "access": null,
    "description": "should return a map with default values for a newly created instance",
    "lineNumber": 15
  },
  {
    "__docId__": 127,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/cookie_options_test.js~describe36.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36.describe37.it39",
    "access": null,
    "description": "should return a non-empty map for an initialized instance",
    "lineNumber": 24
  },
  {
    "__docId__": 128,
    "kind": "test",
    "name": "describe40",
    "testId": 40,
    "memberof": "test/cookie_options_test.js~describe36",
    "testDepth": 1,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36.describe40",
    "access": null,
    "description": "#toString()",
    "lineNumber": 37,
    "testTargets": [
      "CookieOptions#toString"
    ]
  },
  {
    "__docId__": 129,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "test/cookie_options_test.js~describe36.describe40",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36.describe40.it41",
    "access": null,
    "description": "should return an empty string for a newly created instance",
    "lineNumber": 38
  },
  {
    "__docId__": 130,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "test/cookie_options_test.js~describe36.describe40",
    "testDepth": 2,
    "static": true,
    "longname": "test/cookie_options_test.js~describe36.describe40.it42",
    "access": null,
    "description": "should return a format like \"expires=<expires>; domain=<domain>; path=<path>; secure\" for an initialized instance",
    "lineNumber": 42
  }
]